#!/usr/bin/env zsh

### take mails from the outbox  and actually send them

confd=$(readlink -f $(dirname $0)/..)
source $confd/activate

for DIR in "outbox" "outbox/sent"; do
    if [[ ! -d ${MAIL_ENV}/${DIR} ]]; then
        echo "${MAIL_ENV}/${DIR} does not exist! Creating..."
        mkdir ${MAIL_ENV}/${DIR}
    fi
done

mailstatus() {
    mails="$(find outbox/ -maxdepth 1 -type f -size +1c|wc -l)"
    echo "â‡’$mails"
}
set_xterm_title() {
    echo "\033]0;${1}\007"
}
set_tmux_status() {
    if [[ -n "$TMUX" ]]; then
        tmux rename-window -t "$TMUX_PANE" "$1"
    fi
}

set_xterm_title "$(mailstatus)"
[[ -n "$TMUX" ]] && tmux renamew -t "$TMUX_PANE" 'out...'
while true; do
    outbox-dequeue msmtp -C "$MAIL_ENV/msmtprc" -t  --read-envelope-from
    set_xterm_title "$(mailstatus)"
    set_tmux_status "$(mailstatus)"
    if which fswatch &> /dev/null
    then
        # timeout might seem useless; it is not: without it, an email is never retried
        # the --kill-after might seem even more useless. But I had experiences in which fswatch was just not
        # terminating. So let's kill it if it doesn't exit on first TERM signal.
        timeout --kill-after=120 60 fswatch -d -1 --event=Created "$MAIL_ENV/outbox/"
        sleep 1 # to avoid empty emails
    else
        echo -ne 'wait 5 seconds, or press enter to force another cycle\r'
        read -t 5 _ignore
    fi
done
