# Paths
set folder = {{maildir}} # mailbox location
set alias_file = {{confdir}}/alias # where to store aliases
source "cat {{confdir}}/alias|" # read those alias ;)
set header_cache = {{confdir}}/cache/headers # where to store headers
set mailcap_path = {{confdir}}/mailcap # entries for filetypes
set tmpdir = {{confdir}}/temp # where to keep temp files
set signature = {{confdir}}/sig # my signature file
set mbox_type = Maildir # mailbox type


# Interaction, keys ,etc
set wait_key = no # shut up, mutt
set timeout = 3 # idle time before scanning
set mail_check = 0 # minimum time between scans
unset move # gmail does that
set delete # don't ask, just do
unset confirmappend # don't ask, just do!
set quit # don't ask, just do!!
unset mark_old # read/new is good enough for me
set beep_new # bell on new mails
set pipe_decode # strip headers and eval mimes when piping
set thorough_search # strip headers and eval mimes before searching
set sleep_time = 0

# Identity
alternates {% for a in accounts -%} {{-a.email}} {% for i in a.get('extra_identities', {}).values() -%} {{-i.email}} {%endfor%} {%endfor %}


############
# Status view
############
set status_format="%f [Msgs:%<M?%M/>%m%<n? New:%n>%<o? Old:%o>%<d? Del:%d>%<F? Flag:%F>%<t? Tag:%t>%<p? Post:%p>%<l? %l>]---(%s/%S)-%>-(%P)---"


############
# Index view
############
{% raw %}
set index_format = "%Z %{%b %d} %S %-15.15L %s"
{% endraw %}
set sort = threads
set reverse_alias=yes

############
# Message reading
############

set implicit_autoview=yes
alternative_order text/enriched text/plain text/html text
{% raw %}
set pager_format="%C/%m: [%[%H:%M]] %-20.20n %s"
{% endraw %}

############
# Composing
############
#
# Compose View Options
set realname = "{{realname}}"
set envelope_from # which from?
set sig_dashes # dashes before sig
unset sig_on_top
set edit_headers # show headers when composing
set fast_reply # skip to compose when replying
set askcc # ask for CC:
set fcc_attach # save attachments with the body
unset mime_forward # forward attachments as part of body
set forward_format = "Fwd: %s" # format of subject when forwarding
set forward_decode # decode when forwarding
set attribution = "%n:" # format of quoting header
set reply_to=ask-yes # obey to Reply-To... or sometimes not
set reverse_name # reply as whomever it was to
set include # include message in replies
set forward_quote # include message in forwards
set editor = "{{compose.editor}}"
set text_flowed=yes # format=flowed
set send_charset="us-ascii:utf-8"


############
# Reply in new "window"
############
macro index,pager r "<enter-command>unset pipe_decode<enter><pipe-message>{{confdir}}/bin/mutt-reply<enter><enter-command>set pipe_decode<enter>" "reply (new window)"
macro index,pager L "<enter-command>unset pipe_decode<enter><pipe-message>{{confdir}}/bin/mutt-reply list-reply<enter><enter-command>set pipe_decode<enter>" "reply to mailing list (new window)"
macro index,pager g "<enter-command>unset pipe_decode<enter><pipe-message>{{confdir}}/bin/mutt-reply group-reply<enter><enter-command>set pipe_decode<enter>" "reply to all recipients (new window)"
macro index,pager f "<enter-command>unset pipe_decode<enter><pipe-message>{{confdir}}/bin/mutt-reply forward-message<enter><enter-command>set pipe_decode<enter>" "forward a message (new window)"

############
# Sending
############
set sendmail = "{{confdir}}/bin/outbox"
set sendmail_wait = 0
# default: local sent directory
set record = {{confdir}}/sent
{% for acc in accounts %}
{%- if acc.type == 'gmail' -%}
fcc-hook '~f {{acc.email}}' {{maildir}}/sent
{%- else -%} {# acc.type == 'imap' #}
fcc-hook '~f {{acc.email}}' {{maildir}}/{{acc.name}}/{{acc.sent|default("Sent")}}
{%- endif -%} {# acc.type #}
{% endfor %}

# save sent in the folder where replied from
unset record
# folder-hook . "set record=^"

# Postponing etc.
bind compose p postpone-message
bind index p recall-message

source {{confdir}}/mutt-themes/{{mutt_theme}}

# source {{confdir}}/mutt-notmuch
source "{{confdir}}/bin/mutt-capability +notmuch {{confdir}}/mutt-notmuch|"
source "{{confdir}}/bin/mutt-capability NOTMUCH {{confdir}}/mutt-notmuch|"
# source "{{confdir}}/bin/mutt-capability +SIDEBAR {{confdir}}/mutt-sidebar|"
source "{{confdir}}/bin/mutt-capability patch-forgotten-attachment {{confdir}}/mutt-forgotten-attachment|"
source "{{confdir}}/bin/mutt-capability patch-cond-date {{confdir}}/mutt-cond-date|"
source "{{confdir}}/bin/mutt-capability cond_date {{confdir}}/mutt-cond-date|"

{% block mutt_static_alias %}
{%- for acc in accounts -%}
alias {{acc.name}} {{acc.email}}
{% for id,data in acc.get('extra_identities', {}).items() %}
alias {{acc.name}}-{{id}} {{data.name}} <{{data.email}}>
{% endfor %}
{% endfor -%}
{%- endblock %}

#######
# Mail reading
# #####
macro pager \cb <pipe-entry>'{{programs.url_helper}}'<enter> 'Follow links with {{url_helper}}' 

#######
# GPG
#######
{% block mutt_gpg %}
set pgp_use_gpg_agent=yes
set crypt_use_gpgme

set pgp_replyencrypt=yes
set pgp_good_sign="^gpg: Good signature from"
set pgp_entry_format="%3n Trust:%t[%f] %4l/0x%k %-4a %2c %u"

set pgp_auto_decode=yes
set pgp_long_ids=yes
set pgp_sort_keys=trust
bind compose p  pgp-menu
# if a message is signed, reply normally
# if a message is encryped, reply encrypted
set crypt_autosign=no
set crypt_replysign=no
set crypt_replyencrypt=yes
set crypt_replysignencrypted=no
# who cares about s/mime, we like gpg!
set smime_is_default=no

color body       color82 color237 "^gpg: Good signature.*"
color body       color196 color236 "^gpg: BAD signature.*"
color body       color202 color237 "^gpg: Can't check signature.*"
color body       color202 color237 "^gpg: Impossibile controllare la firma.*"
{% endblock mutt_gpg %}

source {{confdir}}/mutt_hooks

# vim: set ft=muttrc:
